version: "2.4"

networks:
  rag-network:
    driver: bridge

services:
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    restart: unless-stopped
    volumes:
      - qdrant_data:/qdrant/storage
    ports:
      - "6333:6333"
    networks:
      - rag-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "6333"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - rag-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    networks:
      - rag-network
    volumes:
      - /root/.ollama
    command: "--no-verify"

  backend:
    build: ./backend
    container_name: backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - QDRANT_URL=http://qdrant:6333
      - OLLAMA_URL=http://ollama:11434
      - COLLECTION_NAME=rag_collection
      - DOCS_PATH=/app/documents
      - HOST=0.0.0.0
      - PORT=8000
    volumes:
      - ./backend/documents:/app/documents
    depends_on:
      qdrant:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - rag-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  frontend:
    build: ./frontend
    container_name: rag-frontend
    restart: unless-stopped
    ports:
      - "8501:8501"
    depends_on:
      - backend
    networks:
      - rag-network

volumes:
  qdrant_data:
    driver: local
  ollama_data:
    driver: local